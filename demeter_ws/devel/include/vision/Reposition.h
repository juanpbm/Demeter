// Generated by gencpp from file vision/Reposition.msg
// DO NOT EDIT!


#ifndef VISION_MESSAGE_REPOSITION_H
#define VISION_MESSAGE_REPOSITION_H

#include <ros/service_traits.h>


#include <vision/RepositionRequest.h>
#include <vision/RepositionResponse.h>


namespace vision
{

struct Reposition
{

typedef RepositionRequest Request;
typedef RepositionResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Reposition
} // namespace vision


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::vision::Reposition > {
  static const char* value()
  {
    return "47be5df2ac38fbdb1ce8731a7f11ea4b";
  }

  static const char* value(const ::vision::Reposition&) { return value(); }
};

template<>
struct DataType< ::vision::Reposition > {
  static const char* value()
  {
    return "vision/Reposition";
  }

  static const char* value(const ::vision::Reposition&) { return value(); }
};


// service_traits::MD5Sum< ::vision::RepositionRequest> should match
// service_traits::MD5Sum< ::vision::Reposition >
template<>
struct MD5Sum< ::vision::RepositionRequest>
{
  static const char* value()
  {
    return MD5Sum< ::vision::Reposition >::value();
  }
  static const char* value(const ::vision::RepositionRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::vision::RepositionRequest> should match
// service_traits::DataType< ::vision::Reposition >
template<>
struct DataType< ::vision::RepositionRequest>
{
  static const char* value()
  {
    return DataType< ::vision::Reposition >::value();
  }
  static const char* value(const ::vision::RepositionRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::vision::RepositionResponse> should match
// service_traits::MD5Sum< ::vision::Reposition >
template<>
struct MD5Sum< ::vision::RepositionResponse>
{
  static const char* value()
  {
    return MD5Sum< ::vision::Reposition >::value();
  }
  static const char* value(const ::vision::RepositionResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::vision::RepositionResponse> should match
// service_traits::DataType< ::vision::Reposition >
template<>
struct DataType< ::vision::RepositionResponse>
{
  static const char* value()
  {
    return DataType< ::vision::Reposition >::value();
  }
  static const char* value(const ::vision::RepositionResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // VISION_MESSAGE_REPOSITION_H
