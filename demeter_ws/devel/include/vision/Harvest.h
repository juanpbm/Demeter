// Generated by gencpp from file vision/Harvest.msg
// DO NOT EDIT!


#ifndef VISION_MESSAGE_HARVEST_H
#define VISION_MESSAGE_HARVEST_H

#include <ros/service_traits.h>


#include <vision/HarvestRequest.h>
#include <vision/HarvestResponse.h>


namespace vision
{

struct Harvest
{

typedef HarvestRequest Request;
typedef HarvestResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Harvest
} // namespace vision


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::vision::Harvest > {
  static const char* value()
  {
    return "d41d8cd98f00b204e9800998ecf8427e";
  }

  static const char* value(const ::vision::Harvest&) { return value(); }
};

template<>
struct DataType< ::vision::Harvest > {
  static const char* value()
  {
    return "vision/Harvest";
  }

  static const char* value(const ::vision::Harvest&) { return value(); }
};


// service_traits::MD5Sum< ::vision::HarvestRequest> should match
// service_traits::MD5Sum< ::vision::Harvest >
template<>
struct MD5Sum< ::vision::HarvestRequest>
{
  static const char* value()
  {
    return MD5Sum< ::vision::Harvest >::value();
  }
  static const char* value(const ::vision::HarvestRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::vision::HarvestRequest> should match
// service_traits::DataType< ::vision::Harvest >
template<>
struct DataType< ::vision::HarvestRequest>
{
  static const char* value()
  {
    return DataType< ::vision::Harvest >::value();
  }
  static const char* value(const ::vision::HarvestRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::vision::HarvestResponse> should match
// service_traits::MD5Sum< ::vision::Harvest >
template<>
struct MD5Sum< ::vision::HarvestResponse>
{
  static const char* value()
  {
    return MD5Sum< ::vision::Harvest >::value();
  }
  static const char* value(const ::vision::HarvestResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::vision::HarvestResponse> should match
// service_traits::DataType< ::vision::Harvest >
template<>
struct DataType< ::vision::HarvestResponse>
{
  static const char* value()
  {
    return DataType< ::vision::Harvest >::value();
  }
  static const char* value(const ::vision::HarvestResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // VISION_MESSAGE_HARVEST_H
